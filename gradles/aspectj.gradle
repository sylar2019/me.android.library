//import com.android.build.gradle.LibraryPlugin
//import org.aspectj.bridge.IMessage
//import org.aspectj.bridge.MessageHandler
//import org.aspectj.tools.ajc.Main
//
//final def log = project.logger
//final boolean isApp = isAndroidApp()
//final def variants = isApp ? project.android.applicationVariants : project.android.libraryVariants
//
//variants.all { variant ->
//    if (!variant.buildType.isDebuggable()) {
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        return
//    }
//
//    def bootclasspath
//    if (isApp) {
//        bootclasspath = project.android.bootClasspath
//    } else {
//        LibraryPlugin plugin = project.plugins.getPlugin(LibraryPlugin)
//        bootclasspath = plugin.project.android.bootClasspath
//    }
//
//    JavaCompile javaCompile = variant.javaCompile
//    javaCompile.doLast {
//        String[] args = ["-showWeaveInfo",
//                         "-1.8",
//                         "-inpath", javaCompile.destinationDir.toString(),
//                         "-aspectpath", javaCompile.classpath.asPath,
//                         "-d", javaCompile.destinationDir.toString(),
//                         "-classpath", javaCompile.classpath.asPath,
//                         "-bootclasspath", bootclasspath.join(File.pathSeparator)]
//        log.debug "ajc args: " + Arrays.toString(args)
//
//        MessageHandler handler = new MessageHandler(true)
//        new Main().run(args, handler)
//        for (IMessage message : handler.getMessages(null, true)) {
//            switch (message.getKind()) {
//                case IMessage.ABORT:
//                case IMessage.ERROR:
//                case IMessage.FAIL:
//                    log.error message.message, message.thrown
//                    break
//                case IMessage.WARNING:
//                    log.warn message.message, message.thrown
//                    break
//                case IMessage.INFO:
//                    log.info message.message, message.thrown
//                    break
//                case IMessage.DEBUG:
//                    log.debug message.message, message.thrown
//                    break
//            }
//        }
//    }
//}
//
//dependencies {
//    //aspectj
//    api "org.aspectj:aspectjrt:${aspectjVersion}"
//}